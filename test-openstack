#!/bin/bash
. ~/virtualenv/bin/activate
. ~/openrc-vexxhost.sh
#. ~/openrc_rdo-cloud_v3.sh

distro="${1}"

set -eux
login="testvm"
flavor=$(openstack flavor list -f json|jq -r '.[] | select(.RAM == 1024).ID')  # "m1.small"

function clean_up() {
openstack server list -f value -c ID --name test_vm|xargs -r openstack server delete
openstack volume list -f value -c ID --name test_vol|xargs -r openstack volume delete
openstack image list -f value -c ID --name test_img|xargs -r openstack image delete

}

clean_up
ip=$(openstack floating ip list -f value -c 'Floating IP Address' --status DOWN|head -n1)
openstack image create --disk-format qcow2 --container-format bare --file /var/lib/virt-lightning/pool/upstream/${distro}.qcow2 test_img
openstack volume create --image $(openstack image list -f value -c ID --name test_img) --size 30 test_vol

vol_id=""
while [ -z ${vol_id}  ]; do
    vol_id=$(openstack volume list -f value -c ID --name test_vol --status available)
    sleep 5
done


openstack server create --user-data user_data --volume ${vol_id} --wait --flavor ${flavor} --network private --key-name t450s-gone --security-group ssh test_vm
openstack server add floating ip test_vm ${ip}

call_ssh="ssh -i ~/.ssh/cloud.key -o BatchMode=yes -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null $login@${ip}"
while true; do
    $call_ssh uname && break
    sleep 5
done
# TODO: DragonFlyBSD seems to restart sshd after the first successful connection
# as a result, the next operation just fails. So, until we've got a better solution,
# we wait a bit to be sure sshd is available.
sleep 5

$call_ssh groups | grep cloud_init_users || exit 1
openstack console log show test_vm | tee console.log
grep "DataSourceOpenStack" console.log || exit 1

${call_ssh} cat /var/log/cloud-init.log > cloud-init.log
clean_up
exit 0
